package openSaveControl;

import java.io.File;

import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

public class OpenSaveControl {

	private String defaultSaveAsFilename = "report.txt";
	private String defaultOpenNamesDirectory = "";
	private String defaultOpenSentenceTemplatesDirectory = "";
	private String defaultOpenDirDirectory = "";

	private JFileChooser saveAsFileChooser = null;

	private JFileChooser openNamesChooser = null;
	private JFileChooser openSentenceTemplatesChooser = null;
	private JFileChooser openDirChooser = null;
	private OpenSaveControlClient oscClient = null;

	private JFrame frame;

	public OpenSaveControl(JFrame f, OpenSaveControlClient orf, String defaultSaveAsFilename) {
		super();
		frame = f;
		oscClient = orf;
		this.defaultSaveAsFilename = defaultSaveAsFilename;
		gutsOfConstrutor();
	}

	public OpenSaveControl(JFrame f, OpenSaveControlClient orf) {
		super();
		frame = f;
		oscClient = orf;
		gutsOfConstrutor();
	}

	private void gutsOfConstrutor() {
		defaultOpenNamesDirectory = System.getProperty("user.dir");
		defaultOpenSentenceTemplatesDirectory = defaultOpenNamesDirectory;
		defaultOpenDirDirectory = defaultOpenNamesDirectory;

		// Setup Open Names Dialog 
		{
			openNamesChooser = new JFileChooser();
			openNamesChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
		}

		// Setup Sentence Templates Directory Dialog 
		{
			openSentenceTemplatesChooser = new JFileChooser();
			openSentenceTemplatesChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
		}
		// Setup Open Directory Dialog (directory containing input data files)
		{
			openDirChooser = new JFileChooser();
			openDirChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
		}

		// Setup SaveAs Dialog
		{
			saveAsFileChooser = new JFileChooser();

			saveAsFileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
			saveAsFileChooser.setApproveButtonText("Save");

			// Setup file filters
			// The filters should not be hard coded.
			FileNameExtensionFilter txtFilter = new FileNameExtensionFilter("txt files (*.txt)", "txt");
			FileNameExtensionFilter docFilter = new FileNameExtensionFilter("doc files (*.doc)", "doc");
			saveAsFileChooser.addChoosableFileFilter(txtFilter);
			saveAsFileChooser.addChoosableFileFilter(docFilter);
			saveAsFileChooser.setFileFilter(txtFilter);
		}

		// Until a file is opened then there is nothing to save
		// oscClient.enableSaveMenuItem(false);
		// oscClient.enableSaveAsMenuItem(false);

	}

	public void doOpenNames() {

		File file = new File(defaultOpenNamesDirectory);
		openNamesChooser.setSelectedFile(file);

		int result = openNamesChooser.showOpenDialog(frame);
		if (result != JFileChooser.APPROVE_OPTION)
			return;
		file = openNamesChooser.getSelectedFile();
		defaultOpenNamesDirectory = file.getAbsolutePath();
		defaultOpenSentenceTemplatesDirectory = file.getParent();

		oscClient.openReadNamesFile(file);

		oscClient.enableOpenSentenceTemplatesMenuItem(false);
		//oscClient.enableSaveAsMenuItem(true);

	}

	// Opens directory containing both input file
	public void doOpen() {

		File dir = new File(defaultOpenDirDirectory);
		openDirChooser.setSelectedFile(dir);

		int result = openDirChooser.showOpenDialog(frame);
		if (result != JFileChooser.APPROVE_OPTION)
			return;
		dir = openDirChooser.getSelectedFile();
		defaultOpenDirDirectory = dir.getAbsolutePath();

		oscClient.openReadFile(dir);

		oscClient.enableSaveMenuItem(false);
		oscClient.enableSaveAsMenuItem(true);

	}

	public void doSaveAs() {

		String pathSeparator = System.getProperty("file.separator");
		File file = new File(defaultOpenDirDirectory + pathSeparator + defaultSaveAsFilename);
		saveAsFileChooser.setSelectedFile(file);

		// JFileChooser chooser = new JFileChooser(initialPath);
		int result = saveAsFileChooser.showOpenDialog(frame);
		if (result != JFileChooser.APPROVE_OPTION)
			return;
		File saveAsFile = saveAsFileChooser.getSelectedFile();

		defaultSaveAsFilename = saveAsFile.getName();
		defaultOpenDirDirectory = saveAsFile.getParent();

		// Check to see if the existing file exists.
		if (saveAsFile.exists()) {
			// File exists, so ask about overwriting
			result = JOptionPane.showConfirmDialog(frame, "The file exists, overwrite?", "Existing file",
					JOptionPane.YES_NO_CANCEL_OPTION);
			if (result != JOptionPane.YES_OPTION)
				return;
		}

		// File either doesn't exist or it is ok to overwrite;
		oscClient.writeFile(saveAsFile);

		oscClient.enableSaveMenuItem(true);
	}

	public void doSave() {

		String pathSeparator = System.getProperty("file.separator");
		File file = new File(defaultOpenDirDirectory + pathSeparator + defaultSaveAsFilename);

		oscClient.writeFile(file);
	}

}
